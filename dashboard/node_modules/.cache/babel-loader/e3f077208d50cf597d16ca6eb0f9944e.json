{"ast":null,"code":"var _jsxFileName = \"/Users/max180643/Documents/Git/SOP/week-9/dashboard/src/App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Container, Row, Col, Table, Card, Badge } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faServer, faGlobe, faPlug, faDesktop, faEthernet, faHdd, faLeaf, faCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { Doughnut } from \"react-chartjs-2\";\n\nfunction App() {\n  const [firstTime, setFirstTime] = useState(true);\n  const [connected, setConnected] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [active, setActive] = useState(0);\n  const [inActive, setInActive] = useState(0);\n  const [instances, setInstances] = useState([]); // lcp --proxyUrl http://127.0.0.1:8761/eureka/apps/\n\n  const fetchData = async () => {\n    await axios.get(\"http://localhost:8010/proxy\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    }).then(res => {\n      setConnected(1);\n      const data = res.data;\n      const instancesData = data.applications.application;\n      let instancesArray = instances;\n      let currentArray = [];\n\n      if (instancesArray.length === 0) {\n        console.log(\"frist\");\n        instancesData.map(item => {\n          instancesArray.push({\n            name: item.name,\n            data: item.instance[0],\n            status: item.instance[0].status\n          });\n          return item;\n        });\n      } else {\n        console.log(\"not frist\");\n        instancesData.map(item => {\n          currentArray.push({\n            name: item.name,\n            data: item.instance[0],\n            status: item.instance[0].status\n          });\n          return item;\n        }); // compare array new array to old array\n\n        currentArray.map(currentItem => {\n          let alreadyInArray = false;\n          instancesArray.map((instance, index) => {\n            if (currentItem.name === instance.name) {\n              alreadyInArray = true; // check current item status down\n\n              if (currentItem.status === \"DOWN\") instancesArray[index].status = \"DOWN\";\n            }\n\n            return instance;\n          }); // check already in instancesArray\n\n          if (!alreadyInArray) {\n            console.log(\"currentItem:\");\n            console.log(currentItem);\n            instancesArray.push({\n              name: currentItem.name,\n              data: currentItem.data,\n              status: currentItem.data.status\n            });\n          }\n\n          return currentItem;\n        }); // compare old array to new array\n\n        instancesArray.map((instance, index) => {\n          let alreadyInArray = false;\n          currentArray.map(currentItem => {\n            if (instance.name === currentItem.name) {\n              alreadyInArray = true;\n            }\n\n            return currentItem;\n          });\n\n          if (!alreadyInArray) {\n            instancesArray[index].status = \"DOWN\";\n          } else {\n            instancesArray[index].status = \"UP\";\n          }\n\n          return instance;\n        });\n        console.log(\"currentArray:\");\n        console.log(currentArray);\n        setInstances(instancesArray);\n      } // set total\n\n\n      setTotal(instances.length); // set active and inactive\n\n      const count = status => {\n        let count = 0;\n        instances.map(item => {\n          if (item.status === status) count++;\n          return item;\n        });\n        return count;\n      };\n\n      setActive(count(\"UP\"));\n      setInActive(count(\"DOWN\"));\n      console.log(\"instances:\");\n      console.log(instances);\n    }).catch(error => {\n      setConnected(0);\n      console.log(error);\n    }).then(() => {\n      setTimeout(() => setConnected(2), 300);\n    });\n  };\n\n  useEffect(() => {\n    if (firstTime) {\n      fetchData();\n      setFirstTime(false);\n      setInterval(() => fetchData(), 1500);\n    }\n  });\n  return /*#__PURE__*/React.createElement(Container, {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"mt-3 mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"d-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faLeaf,\n    className: \"mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }), \"Eureka dashboard\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ml-auto d-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, connected === 0 && /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faCircle,\n    className: \"fa-xs text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }), connected === 1 && /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faCircle,\n    className: \"fa-xs text-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }\n  }), connected === 2 && /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faCircle,\n    className: \"fa-xs text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Doughnut, {\n    data: {\n      labels: [\"active\", \"inactive\"],\n      datasets: [{\n        data: [10, 20],\n        backgroundColor: [\"green\", \"red\"]\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    bg: \"primary\",\n    text: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faServer,\n    className: \"mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }\n  }), \"Total\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"d-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }, total), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"d-inline ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }\n  }, \"node\"))))), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    bg: \"success\",\n    text: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faGlobe,\n    className: \"mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }\n  }), \"Active\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"d-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }\n  }, active), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"d-inline ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }\n  }, \"node\"))))), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    bg: \"danger\",\n    text: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faPlug,\n    className: \"mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 17\n    }\n  }), \"Inactive\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"d-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }\n  }, inActive), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"d-inline ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 17\n    }\n  }, \"node\")))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faDesktop,\n    className: \"mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 19\n    }\n  }), \"Application Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faEthernet,\n    className: \"mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 19\n    }\n  }), \"Host\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faHdd,\n    className: \"mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 19\n    }\n  }), \"Instance\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faGlobe,\n    className: \"mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 19\n    }\n  }), \"Status\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }\n  }, total === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 19\n    }\n  }, \"No instances available\")), instances.map(item => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: item.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 21\n      }\n    }, item.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 21\n      }\n    }, item.data.hostName), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 21\n      }\n    }, item.data.instanceId.substring(item.data.instanceId.indexOf(\":\") + 1)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Badge, {\n      variant: item.status === \"UP\" ? \"success\" : \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 23\n      }\n    }, item.status)));\n  }))))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/max180643/Documents/Git/SOP/week-9/dashboard/src/App.js"],"names":["React","useEffect","useState","Container","Row","Col","Table","Card","Badge","axios","FontAwesomeIcon","faServer","faGlobe","faPlug","faDesktop","faEthernet","faHdd","faLeaf","faCircle","Doughnut","App","firstTime","setFirstTime","connected","setConnected","total","setTotal","active","setActive","inActive","setInActive","instances","setInstances","fetchData","get","headers","Accept","then","res","data","instancesData","applications","application","instancesArray","currentArray","length","console","log","map","item","push","name","instance","status","currentItem","alreadyInArray","index","count","catch","error","setTimeout","setInterval","labels","datasets","backgroundColor","hostName","instanceId","substring","indexOf"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Container, Row, Col, Table, Card, Badge } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faServer,\n  faGlobe,\n  faPlug,\n  faDesktop,\n  faEthernet,\n  faHdd,\n  faLeaf,\n  faCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Doughnut } from \"react-chartjs-2\";\n\nfunction App() {\n  const [firstTime, setFirstTime] = useState(true);\n  const [connected, setConnected] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [active, setActive] = useState(0);\n  const [inActive, setInActive] = useState(0);\n  const [instances, setInstances] = useState([]);\n\n  // lcp --proxyUrl http://127.0.0.1:8761/eureka/apps/\n  const fetchData = async () => {\n    await axios\n      .get(\"http://localhost:8010/proxy\", {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n      })\n      .then((res) => {\n        setConnected(1);\n        const data = res.data;\n        const instancesData = data.applications.application;\n\n        let instancesArray = instances;\n        let currentArray = [];\n\n        if (instancesArray.length === 0) {\n          console.log(\"frist\");\n          instancesData.map((item) => {\n            instancesArray.push({\n              name: item.name,\n              data: item.instance[0],\n              status: item.instance[0].status,\n            });\n            return item;\n          });\n        } else {\n          console.log(\"not frist\");\n          instancesData.map((item) => {\n            currentArray.push({\n              name: item.name,\n              data: item.instance[0],\n              status: item.instance[0].status,\n            });\n            return item;\n          });\n          // compare array new array to old array\n          currentArray.map((currentItem) => {\n            let alreadyInArray = false;\n            instancesArray.map((instance, index) => {\n              if (currentItem.name === instance.name) {\n                alreadyInArray = true;\n                // check current item status down\n                if (currentItem.status === \"DOWN\")\n                  instancesArray[index].status = \"DOWN\";\n              }\n              return instance;\n            });\n            // check already in instancesArray\n            if (!alreadyInArray) {\n              console.log(\"currentItem:\");\n              console.log(currentItem);\n              instancesArray.push({\n                name: currentItem.name,\n                data: currentItem.data,\n                status: currentItem.data.status,\n              });\n            }\n            return currentItem;\n          });\n          // compare old array to new array\n          instancesArray.map((instance, index) => {\n            let alreadyInArray = false;\n            currentArray.map((currentItem) => {\n              if (instance.name === currentItem.name) {\n                alreadyInArray = true;\n              }\n              return currentItem;\n            });\n            if (!alreadyInArray) {\n              instancesArray[index].status = \"DOWN\";\n            } else {\n              instancesArray[index].status = \"UP\";\n            }\n            return instance;\n          });\n          console.log(\"currentArray:\");\n          console.log(currentArray);\n          setInstances(instancesArray);\n        }\n        // set total\n        setTotal(instances.length);\n        // set active and inactive\n        const count = (status) => {\n          let count = 0;\n          instances.map((item) => {\n            if (item.status === status) count++;\n            return item;\n          });\n          return count;\n        };\n        setActive(count(\"UP\"));\n        setInActive(count(\"DOWN\"));\n        console.log(\"instances:\");\n        console.log(instances);\n      })\n      .catch((error) => {\n        setConnected(0);\n        console.log(error);\n      })\n      .then(() => {\n        setTimeout(() => setConnected(2), 300);\n      });\n  };\n\n  useEffect(() => {\n    if (firstTime) {\n      fetchData();\n      setFirstTime(false);\n      setInterval(() => fetchData(), 1500);\n    }\n  });\n\n  return (\n    <Container className=\"container\">\n      <Row>\n        <Col className=\"mt-3 mb-1\">\n          <div className=\"d-flex\">\n            <h2 className=\"d-inline\">\n              <FontAwesomeIcon icon={faLeaf} className=\"mr-2\" />\n              Eureka dashboard\n            </h2>\n            <span className=\"ml-auto d-inline\">\n              {connected === 0 && (\n                <FontAwesomeIcon\n                  icon={faCircle}\n                  className=\"fa-xs text-danger\"\n                />\n              )}\n              {connected === 1 && (\n                <FontAwesomeIcon\n                  icon={faCircle}\n                  className=\"fa-xs text-success\"\n                />\n              )}\n              {connected === 2 && (\n                <FontAwesomeIcon icon={faCircle} className=\"fa-xs text-muted\" />\n              )}\n            </span>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Doughnut\n            data={{\n              labels: [\"active\", \"inactive\"],\n              datasets: [\n                {\n                  data: [10, 20],\n                  backgroundColor: [\"green\", \"red\"],\n                },\n              ],\n            }}\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Card bg=\"primary\" text=\"white\">\n            <Card.Body>\n              <h4>\n                <FontAwesomeIcon icon={faServer} className=\"mr-2\" />\n                Total\n              </h4>\n              <div>\n                <h1 className=\"d-inline\">{total}</h1>\n                <h5 className=\"d-inline ml-2\">node</h5>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col>\n          <Card bg=\"success\" text=\"white\">\n            <Card.Body>\n              <h4>\n                <FontAwesomeIcon icon={faGlobe} className=\"mr-2\" />\n                Active\n              </h4>\n              <div>\n                <h1 className=\"d-inline\">{active}</h1>\n                <h5 className=\"d-inline ml-2\">node</h5>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col>\n          <Card bg=\"danger\" text=\"white\">\n            <Card.Body>\n              <h4>\n                <FontAwesomeIcon icon={faPlug} className=\"mr-2\" />\n                Inactive\n              </h4>\n              <div>\n                <h1 className=\"d-inline\">{inActive}</h1>\n                <h5 className=\"d-inline ml-2\">node</h5>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col className=\"mt-3\">\n          <Table>\n            <thead>\n              <tr>\n                <th>\n                  <FontAwesomeIcon icon={faDesktop} className=\"mr-2\" />\n                  Application Name\n                </th>\n                <th>\n                  <FontAwesomeIcon icon={faEthernet} className=\"mr-2\" />\n                  Host\n                </th>\n                <th>\n                  <FontAwesomeIcon icon={faHdd} className=\"mr-2\" />\n                  Instance\n                </th>\n                <th>\n                  <FontAwesomeIcon icon={faGlobe} className=\"mr-2\" />\n                  Status\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {total === 0 && (\n                <tr>\n                  <td>No instances available</td>\n                </tr>\n              )}\n              {instances.map((item) => {\n                return (\n                  <tr key={item.name}>\n                    <td>{item.name}</td>\n                    <td>{item.data.hostName}</td>\n                    <td>\n                      {item.data.instanceId.substring(\n                        item.data.instanceId.indexOf(\":\") + 1\n                      )}\n                    </td>\n                    <td>\n                      <Badge\n                        variant={item.status === \"UP\" ? \"success\" : \"danger\"}\n                      >\n                        {item.status}\n                      </Badge>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}